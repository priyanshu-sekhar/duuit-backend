swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v2
paths:
  /:
    get:
      tags:
      - duuit-backend/controllersRootController
      description: ping
      operationId: RootController.Get
      responses:
        "200":
          description: ""
  /goal/:
    post:
      tags:
      - goal
      description: create goal
      operationId: GoalController.CreateGoal
      parameters:
      - in: body
        name: body
        description: body for goal content
        required: true
        schema:
          $ref: '#/definitions/request.GoalRequest'
      responses:
        "200":
          description: '{int} dao.Goal'
        "403":
          description: body is empty
  /goal/{id}:
    delete:
      tags:
      - goal
      description: delete goal
      operationId: GoalController.Delete
      parameters:
      - in: path
        name: id
        description: The comment id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} dao.Reply'
        "403":
          description: body is empty
  /goal/{id}/tracking:
    post:
      tags:
      - goal
      description: add goal tracking
      operationId: GoalController.AddGoalTracking
      parameters:
      - in: body
        name: body
        description: body for tracking content
        required: true
        schema:
          $ref: '#/definitions/request.TrackingRequest'
      responses:
        "200":
          description: '{int} dao.Tracking'
        "403":
          description: body is empty
  /user/:
    post:
      tags:
      - user
      description: add new user
      operationId: UserController.Post
      parameters:
      - in: body
        name: course
        description: The user object
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      responses:
        "200":
          description: '{user} dao.User'
  /user/{id}:
    get:
      tags:
      - user
      description: get user details
      operationId: UserController.Get
      parameters:
      - in: path
        name: id
        description: The user id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} dao.User'
        "403":
          description: body is empty
    put:
      tags:
      - user
      description: update user details
      operationId: UserController.Put
      parameters:
      - in: path
        name: id
        description: The user id
        required: true
        type: integer
        format: int64
      - in: body
        name: course
        description: Include fields to be updated
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      responses:
        "200":
          description: '{string} dao.User'
        "403":
          description: body is empty
    delete:
      tags:
      - user
      description: remove user
      operationId: UserController.Delete
      parameters:
      - in: path
        name: id
        description: The user id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "403":
          description: body is empty
  /user/ping:
    get:
      tags:
      - user
      description: ping
      operationId: UserController.Ping
      responses:
        "200":
          description: ""
definitions:
  common.Status:
    title: Status
    format: int64
    type: integer
  request.GoalRequest:
    title: GoalRequest
    type: object
    properties:
      Description:
        type: string
      Name:
        type: string
      TimelineInWeeks:
        type: integer
        format: int64
      UserID:
        type: integer
        format: int32
  request.TrackingRequest:
    title: TrackingRequest
    type: object
    properties:
      GoalID:
        type: integer
        format: int32
      SequenceNo:
        type: integer
        format: int64
      Status:
        $ref: '#/definitions/common.Status'
      recordedAt:
        type: string
        format: datetime
  request.UserRequest:
    title: UserRequest
    type: object
    properties:
      Bio:
        type: string
      Name:
        type: string
      UID:
        type: string
tags:
- name: goal
  description: |
    Operations about goals
